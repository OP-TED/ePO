name: transform ePO core XMI
on:
  push:
    branches:
      - "**"
    paths:
      - "implementation/ePO/xmi_conceptual_model/ePO_CM.xml"
      - "implementation/eCatalogue/xmi_conceptual_model/ePO_catalogue.xml"
jobs:
  transform:
    runs-on: ubuntu-latest
    env:
#      ePO_CM_FILE_PATH: implementation/ePO/xmi_conceptual_model/ePO_CM.xml
#      OUTPUT_PATH_OWL: implementation/ePO/owl_ontology/
#      OUTPUT_PATH_SHACL: implementation/ePO/shacl_shapes/
#      OUTPUT_REPORT_PATH: implementation/ePO/conventions_report/
      OUTPUT_GLOSSARY_PATH: glossary/
#      OUTPUT_CORE_FILE_NAME: ePO_owl_core.rdf
#      OUTPUT_RESTRICTIONS_FILE_NAME: ePO_restrictions.rdf
#      OUTPUT_SHACL_SHAPES_FILE_NAME: ePO_shacl_shapes.rdf
      OUTPUT_REPORT_FILE_NAME: conventions_report.html
#      OUTPUT_GLOSSARY_FILE_NAME: ePO_glossary.html
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: make transform dir
        run: |
          mkdir -p transform

      - name: get model2owl
        run: |
          cd transform && git clone https://github.com/OP-TED/model2owl.git

      - name: get-saxon
        run: make get-saxon PROJECT_DIR=transform

      - name: get-rdflib
        run: make get-rdflib


      - name: shell script
        run: |
          AVAILABLE_IMPLEMENTATIONS=(eCatalogue ePO)
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            CM_FILE_NAME=$(ls implementation/$implementation/xmi_conceptual_model/)
            CM_FILE_PATH=$(echo "implementation/$implementation/xmi_conceptual_model/${CM_FILE_NAME}")
            OUTPUT_PATH_OWL=$(echo "implementation/$implementation/owl_ontology/")
            OUTPUT_PATH_SHACL=$(echo "implementation/$implementation/shacl_shapes/")
            OUTPUT_REPORT_PATH=$(echo "implementation/$implementation/conventions_report/")
            OUTPUT_CORE_FILE_NAME=$(echo "${implementation}_owl_core.rdf")
            OUTPUT_RESTRICTIONS_FILE_NAME=$(echo "${implementation}_restrictions.rdf")
            OUTPUT_SHACL_SHAPES_FILE_NAME=$(echo "${implementation}_shacl_shapes.rdf")
            OUTPUT_GLOSSARY_FILE_NAME=$(echo "${implementation}_glossary.html")
            cp transform/model2owl/config/metadata.xml implementation/$implementation/xmi_conceptual_model/
            ls -la implementation/$implementation/xmi_conceptual_model/
            echo "CM_FILE_PATH is $CM_FILE_PATH"
            echo "OUTPUT_PATH_OWL is $OUTPUT_PATH_OWL"
            echo "OUTPUT_PATH_SHACL is $OUTPUT_PATH_SHACL"
            echo "OUTPUT_REPORT_PATH is $OUTPUT_REPORT_PATH"
            echo "OUTPUT_CORE_FILE_NAME is $OUTPUT_CORE_FILE_NAME"
            echo "OUTPUT_RESTRICTIONS_FILE_NAME is $OUTPUT_RESTRICTIONS_FILE_NAME"
            echo "OUTPUT_SHACL_SHAPES_FILE_NAME is $OUTPUT_SHACL_SHAPES_FILE_NAME"
            echo "OUTPUT_GLOSSARY_FILE_NAME is $OUTPUT_GLOSSARY_FILE_NAME"

            mkdir -p $OUTPUT_REPORT_PATH
            rm -f $OUTPUT_REPORT_PATH*.html || true
            rm -f $OUTPUT_PATH*.rdf || true

            java -jar transform/saxon-he-10.6.jar -s:$CM_FILE_PATH -xsl:transform/model2owl/src/owl-core.xsl -o:$OUTPUT_PATH_OWL$OUTPUT_CORE_FILE_NAME
            java -jar transform/saxon-he-10.6.jar -s:$CM_FILE_PATH -xsl:transform/model2owl/src/owl-restrictions.xsl -o:$OUTPUT_PATH_OWL$OUTPUT_RESTRICTIONS_FILE_NAME
            java -jar transform/saxon-he-10.6.jar -s:$CM_FILE_PATH -xsl:transform/model2owl/src/shacl-shapes.xsl -o:$OUTPUT_PATH_SHACL$OUTPUT_SHACL_SHAPES_FILE_NAME
            java -jar transform/saxon-he-10.6.jar -s:$CM_FILE_PATH -xsl:transform/model2owl/src/html-conventions-report.xsl -o:$OUTPUT_REPORT_PATH$OUTPUT_REPORT_FILE_NAME
            java -jar transform/saxon-he-10.6.jar -s:$CM_FILE_PATH -xsl:transform/model2owl/src/html-model-glossary.xsl -o:$OUTPUT_GLOSSARY_PATH$OUTPUT_GLOSSARY_FILE_NAME
            echo "+++++++++++++++++transform to turtle++++++++++++++++++++++++++++"
            echo "ls ${OUTPUT_PATH_OWL}/*.rdf"
            make convert-to-turtle FILELIST=$(ls ${OUTPUT_PATH_OWL}/*.rdf)
            echo "-------------------end transform_________________________________"
          done
        shell: bash

      - name: verify transform ePO
        run: |
          ls -la implementation/ePO/owl_ontology/
          ls -la implementation/ePO/shacl_shapes/
          ls -la implementation/ePO/conventions_report/
          ls -la glossary/

      - name: verify transform eCatalogue
        run: |
          ls -la implementation/eCatalogue/owl_ontology/
          ls -la implementation/eCatalogue/shacl_shapes/
          ls -la implementation/eCatalogue/conventions_report/
          ls -la glossary/

#      - name: get model2owl
#        run: git clone https://github.com/OP-TED/model2owl.git
#
#      - name: go in model2owl folder
#        run: cd model2owl
#
#      - name: get-saxon
#        run: make get-saxon PROJECT_DIR=transform
#
#      - name: saxon dir
#        run: cd transform && ls -la
#
#      - name: get-rdflib
#        run: make get-rdflib



#      - name: install dependency
#        run: |
#          make init
#
#      - name: get model2owl
#        run: make get-model2owl-repo
#
#      - name: clean previous transformation
#        run: |
#          mkdir -p $OUTPUT_REPORT_PATH
#          rm -f $OUTPUT_REPORT_PATH*.html || true
#          rm -f $OUTPUT_PATH*.rdf || true
#
#      - name: transform xml to rdf
#        run: |
#          java -jar transform/saxon-he-10.6.jar -s:$ePO_CM_FILE_PATH -xsl:transform/model2owl/src/owl-core.xsl -o:$OUTPUT_PATH_OWL$OUTPUT_CORE_FILE_NAME
#          java -jar transform/saxon-he-10.6.jar -s:$ePO_CM_FILE_PATH -xsl:transform/model2owl/src/owl-restrictions.xsl -o:$OUTPUT_PATH_OWL$OUTPUT_RESTRICTIONS_FILE_NAME
#          java -jar transform/saxon-he-10.6.jar -s:$ePO_CM_FILE_PATH -xsl:transform/model2owl/src/shacl-shapes.xsl -o:$OUTPUT_PATH_SHACL$OUTPUT_SHACL_SHAPES_FILE_NAME
#          java -jar transform/saxon-he-10.6.jar -s:$ePO_CM_FILE_PATH -xsl:transform/model2owl/src/html-conventions-report.xsl -o:$OUTPUT_REPORT_PATH$OUTPUT_REPORT_FILE_NAME
#          java -jar transform/saxon-he-10.6.jar -s:$ePO_CM_FILE_PATH -xsl:transform/model2owl/src/html-model-glossary.xsl -o:$OUTPUT_GLOSSARY_PATH$OUTPUT_GLOSSARY_FILE_NAME
#
#      - name: merge xmi files for ePO core, eCatalogue and eNotice
#        run: |
#          make merge-xmi
#
#      - name: generate combined glossary
#        run: |
#          make generate-glossary
#
#      - name: see result
#        run: |
#          ls -l $OUTPUT_PATH_OWL $OUTPUT_PATH_OWL $OUTPUT_PATH_SHACL
#
#      - name: remove unnecessary files
#        run: |
#          sudo rm -rf transform
#        shell: bash
#
#      - name: commit files
#        id: commit
#        run: |
#               git config --local user.email "action@github.com"
#               git config --local user.name "github-actions"
#               git status
#
#               git add .
#               if [ -z "$(git status --porcelain)" ]; then
#               echo "::set-output name=push::false"
#               else
#               git commit -m "Adding transformation files"
#               echo "::set-output name=push::true"
#               fi
#        shell: bash
#
#      - name: Push changes
#        if: steps.commit.outputs.push == 'true'
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: ${{ github.ref }}