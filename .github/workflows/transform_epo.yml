name: transform ePO and ePO modules XMIs
on:
  push:
    branches:
      - "**"
      - "!demo"
    paths:
      - "implementation/ePO/xmi_conceptual_model/ePO_CM.xml"
      - "implementation/eCatalogue/xmi_conceptual_model/eCatalogue_CM.xml"
      - "implementation/eNotice/xmi_conceptual_model/eNotice_CM.xml"
      - "implementation/eOrdering/xmi_conceptual_model/eOrdering_CM.xml"
      - "implementation/eFulfilment/xmi_conceptual_model/eFulfilment_CM.xml"
      - "implementation/eFulfilment/xmi_conceptual_model/eContract_CM.xml"
jobs:
  transform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: get model2owl
        run: |
          git clone --branch 2.1.0 https://github.com/OP-TED/model2owl.git
          pwd

      - name: get-saxon
        run: pwd && cd model2owl && make get-saxon

      - name: get-rdflib
        run: cd model2owl && make create-virtual-env && make get-rdflib

      - name: transform step
        run: |
          AVAILABLE_IMPLEMENTATIONS=(eOrdering eFulfilment eCatalogue eNotice eContract ePO)
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            echo "-------------------${implementation} transform---------------------------------"
            sed -i "s/test\/ePO-default-config/..\/implementation\/${implementation}\/model2owl-config/g" model2owl/config-proxy.xsl
            cat model2owl/config-proxy.xsl


            CM_FILE_NAME=$(echo "${implementation}_CM.xml")
            CM_FILE_PATH=$(echo "implementation/$implementation/xmi_conceptual_model/${CM_FILE_NAME}")
            OUTPUT_PATH_OWL=$(echo "implementation/$implementation/owl_ontology/")
            OUTPUT_PATH_SHACL=$(echo "implementation/$implementation/shacl_shapes/")

            ls -la implementation/$implementation/xmi_conceptual_model/
            echo "CM_FILE_PATH is $CM_FILE_PATH"
            echo "OUTPUT_PATH_OWL is $OUTPUT_PATH_OWL"
            echo "OUTPUT_PATH_SHACL is $OUTPUT_PATH_SHACL"


            cd model2owl
            ls -la
            echo "+++++++++++++++++transform to rdf++++++++++++++++++++++++++++"
            make owl-core XMI_INPUT_FILE_PATH=../$CM_FILE_PATH OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_OWL
            make owl-restrictions XMI_INPUT_FILE_PATH=../$CM_FILE_PATH OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_OWL
            make shacl XMI_INPUT_FILE_PATH=../$CM_FILE_PATH OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_SHACL

            echo "+++++++++++++++++transform to turtle++++++++++++++++++++++++++++"
            echo $(ls ${OUTPUT_PATH_OWL}/*.rdf)
            make convert-to-turtle ONTOLOGY_FOLDER_PATH=../$OUTPUT_PATH_OWL
            echo $(ls ${OUTPUT_PATH_SHACL}/*.rdf)
            make convert-to-turtle ONTOLOGY_FOLDER_PATH=../$OUTPUT_PATH_SHACL
            echo "-------------------end transform---------------------------------"

            sed -i "s/..\/implementation\/${implementation}\/model2owl-config/test\/ePO-default-config/g" config-proxy.xsl
            cd ..
          done
        shell: bash

      - name: remove unnecessary files
        run: |
          sudo rm -rf model2owl
        shell: bash

      - name: commit files
        id: commit
        run: |
               git config --local user.email "action@github.com"
               git config --local user.name "github-actions"
               git pull
               git status

               git add .
               if [ -z "$(git status --porcelain)" ]; then
               echo "::set-output name=push::false"
               else
               git commit -m "Adding transformation files"
               echo "::set-output name=push::true"
               fi
        shell: bash

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}